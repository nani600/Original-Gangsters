48.	Have the function ClosestEnemyII(strArr) read the matrix of numbers stored in strArr which will be a 2D matrix that contains only the integers 1, 0, or 2. Then from the position in the matrix where a 1 is, return the number of spaces either left, right, down, or up you must move to reach an enemy which is represented by a 2. You are able to wrap around one side of the matrix to the other as well. For example: if strArr is ["0000", "1000", "0002", "0002"] then this looks like the following: 

0 0 0 0
1 0 0 0
0 0 0 2
0 0 0 2 


def ClosestEnemyII(strArr):
    matrix = [[int(c) for c in row] for row in strArr]
    rows, cols = len(matrix), len(matrix[0])
    pos_1 = [(i, j) for i in range(rows) for j in range(cols) if matrix[i][j] == 1][0]
    min_distance = float('inf')


    for i in range(rows):
        for j in range(cols):
            if matrix[i][j] == 2:
                distance = min(abs(i - pos_1[0]), rows - abs(i - pos_1[0])) + \
                           min(abs(j - pos_1[1]), cols - abs(j - pos_1[1]))
                if distance < min_distance:
                    min_distance = distance


    if min_distance == float('inf'):
        return 0


    return min_distance
print(ClosestEnemyII(input()))

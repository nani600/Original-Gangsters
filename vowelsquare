Within this matrix there is a 2x2 square of vowels starting in the second row and first column, namely, ei, ou. If a 2x2 square of vowels is found your program should return the top-left position (row-column) of the square, so for this example your program should return 1-0. If no 2x2 square of vowels exists, then return the string not found. If there are multiple squares of vowels, return the one that is at the most top-left position in the whole matrix. The input matrix will at least be of size 2x2. 
Sample Test Cases
Input:["aqrst", "ukaei", "ffooo"]
Output:"1-2"
Input:["gg", "ff"]
Output:"not found"



  def VowelSquare(strArr):
    def is_vowel(char):
        return char.lower() in {'a', 'e', 'i', 'o', 'u'}
    rows, cols = len(strArr), len(strArr[0])
    for i in range(rows - 1):
        for j in range(cols - 1):
            if (
                is_vowel(strArr[i][j]) and
                is_vowel(strArr[i][j + 1]) and
                is_vowel(strArr[i + 1][j]) and
                is_vowel(strArr[i + 1][j + 1])
            ):
                return f"{i}-{j}"
    return "not found"
print(VowelSquare(input()))
